<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:Wavelength.Views"
       xmlns:controls="clr-namespace:Wavelength.Controls"
       xmlns:fontAwesome="clr-namespace:Wavelength.Controls"
       x:Class="Wavelength.AppShell"
       Title="Wavelength"
       FlyoutBackgroundColor = "{StaticResource Primary}" >

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.FlyoutBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource PrimaryMenuItem}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <FlyoutItem Title="Auctions" Icon="{x:Static fontAwesome:FontAwesomeIcons.Home}">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:ItemsPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Settings" Icon="{x:Static fontAwesome:FontAwesomeIcons.Cogs}">
        <ShellContent Route="InformationPage" ContentTemplate="{DataTemplate local:InformationPage}" />
    </FlyoutItem>

    <FlyoutItem Title="About Couchbid" Icon="{x:Static fontAwesome:FontAwesomeIcons.InfoCircle}">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>
    
    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--
    <MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>
    -->
    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <!--
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>
    -->
    
    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    -->
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid 
		        Padding="0, 100, 0, 0">
	        </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>
    <!--
    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>
    -->
    <!--  Modified to show icon fonts, this should be built in but it's not, 
            used default ShellItems template found from link above  -->
    <Shell.ItemTemplate>
     <DataTemplate>
         <Grid
            HeightRequest="{x:OnPlatform Android=50}"
            ColumnSpacing="{x:OnPlatform UWP=0}"
            RowSpacing="{x:OnPlatform UWP=0, iOS=40, Android=40}">
             <VisualStateManager.VisualStateGroups>
                 <VisualStateGroupList>
                     <VisualStateGroup 
			            x:Name="CommonStates">
                         <VisualState 
			                x:Name="Normal">
                             <VisualState.Setters>
                                 <Setter 
				                    Property="BackgroundColor" 
				                    Value="{StaticResource Primary}" />
                                     <Setter 
					                    TargetName="FlyoutItemLabel" 
					                    Property="Label.TextColor" 
					                    Value="{StaticResource PageTextColor}" />
                             </VisualState.Setters>
                         </VisualState>
                         <VisualState 
			                    x:Name="Selected">
                             <VisualState.Setters>
                                 <Setter 
				                    TargetName="FlyoutItemLabel" 
				                    Property="Label.TextColor" 
				                    Value="White" />
                             </VisualState.Setters>
                         </VisualState>
                     </VisualStateGroup>
                 </VisualStateGroupList>
             </VisualStateManager.VisualStateGroups>
             <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{x:OnPlatform Android=54, iOS=50, UWP=Auto}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
             <Image 
                VerticalOptions="Center"
		        Margin="0, 16"
                HorizontalOptions="{x:OnPlatform Default=Center, UWP=Start}"
                HeightRequest="{x:OnPlatform Android=24, iOS=22, UWP=16}"
                WidthRequest="{x:OnPlatform Android=24, iOS=22, UWP=16}">
                <Image.Source>
                    <FontImageSource 
	                    Size="16"	
			            FontFamily="FontAwesome5Solid"
                        Color="{Binding Source={x:Reference FlyoutItemLabel} ,Path=TextColor}"
                        Glyph="{Binding Icon}"/>
                    </Image.Source>
             </Image>
             <Label 
		        x:Name="FlyoutItemLabel"
                Grid.Column="1"        
                Text="{Binding Title}"
                FontSize="{x:OnPlatform Android=18, iOS=Medium}"
                HorizontalOptions="{x:OnPlatform UWP=Start}"
                HorizontalTextAlignment="{x:OnPlatform UWP=Start}"
                FontAttributes="{x:OnPlatform iOS=Bold}"
                VerticalTextAlignment="Center">
               <Label.Margin>
                    <OnPlatform x:TypeArguments="Thickness">
                        <OnPlatform.Platforms>
                            <On Platform="Android"
                                Value="20, 0, 0, 0" />
                        </OnPlatform.Platforms>
                    </OnPlatform>
                </Label.Margin>
                <Label.FontFamily>
                    <OnPlatform x:TypeArguments="x:String">
                        <OnPlatform.Platforms>
                            <On Platform="Android"
                                Value="sans-serif-medium" />
                        </OnPlatform.Platforms>
                    </OnPlatform>
                </Label.FontFamily>
		    </Label>
         </Grid>
     </DataTemplate>
    </Shell.ItemTemplate> 

    <!--
    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
